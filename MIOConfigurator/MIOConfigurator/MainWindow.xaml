<Window x:Class="MIOConfigurator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:mioConfig="clr-namespace:MIOConfig;assembly=MIOConfig"       
        xmlns:qc="clr-namespace:QuickConverter;assembly=QuickConverter"
        xmlns:wpf="clr-namespace:Rubenhak.Common.WPF;assembly=Rubenhak.Common.WPF"        
        mc:Ignorable="d"
        Title="Настройка МВВ" Height="600" Width="800" MinHeight="600" MinWidth="800" WindowStartupLocation="CenterScreen" 
        Closing="MainWindow_Closing" Loaded="MainWindow_Loaded">        
    <Window.Resources>        
        <Style TargetType="{x:Type MenuItem}" x:Key="ParentMenuStyle">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="White" Offset="0"/>
                        <GradientStop Color="Lavender" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type MenuItem}" x:Key="ChildMenuStyle">
            <Setter Property="Background" Value="Lavender"/>                            
        </Style>       
        <Style TargetType="{x:Type Menu}">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="White" Offset="0"/>
                        <GradientStop Color="Lavender" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <DockPanel UseLayoutRounding="True" Background="Lavender">
        <Menu DockPanel.Dock="Top" IsMainMenu="True" DataContext="MIOConfigurator.MainWindow" x:Name="MainMenu" FontSize="12">            
            <MenuItem Header="_Соединение" Style="{StaticResource ParentMenuStyle}">
                <MenuItem x:Name="CmdConnect" Header="_Подключиться" Click="CmdConnect_OnClick" Style="{StaticResource ChildMenuStyle}">                    
                    <MenuItem.Icon>
                        <Image Height="16" Width="16" Source="Images/connected.png" />
                    </MenuItem.Icon>                    
                </MenuItem>
                <MenuItem x:Name="CmdDisconnect" Header="_Отключиться" Click="CmdDisconnect_OnClick" IsEnabled="False" Style="{StaticResource ChildMenuStyle}"></MenuItem>                
            </MenuItem>
            <MenuItem Header="_Список устройств" IsEnabled="{Binding ElementName=CmdDisconnect, Path=IsEnabled}" Style="{StaticResource ParentMenuStyle}">
                <MenuItem x:Name="CmdFindDevices" Header="_Найти устройства..." Click="CmdFindDevices_OnClick" Style="{StaticResource ChildMenuStyle}"/>
                <MenuItem x:Name="CmdCancelSearchDevices" Header="_Прервать поиск" IsEnabled="False" Click="CmdCancelSearchDevices_OnClick" Style="{StaticResource ChildMenuStyle}"/>                
                <MenuItem x:Name="CmdAddDeviceToList" Background="Lavender" Click="CmdAddDeviceToList_Click">
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal" Background="Lavender">
                            <TextBlock Text="Добавить устройство с адресом:" HorizontalAlignment="Stretch" />
                            <TextBox x:Name="SlaveConcreteAddress" Margin="5,0,0,0" Width="40" Height="Auto"
                                wpf:TextBoxMaskBehavior.Mask="Integer"
        		                wpf:TextBoxMaskBehavior.MinimumValue="1"
                        		wpf:TextBoxMaskBehavior.MaximumValue="247" PreviewLostKeyboardFocus="SlaveConcreteAddress_OnPreviewLostKeyboardFocus"/>
                        </StackPanel>
                    </MenuItem.Header>
                </MenuItem>                               
                <MenuItem x:Name="CmdDelDeviceFromList" Header="_Удалить устройство из списка" IsEnabled="{Binding ElementName=DevicesList, Path=HasItems}" Style="{StaticResource ChildMenuStyle}" Click="CmdDelDeviceFromList_OnClick"/>                
                <MenuItem x:Name="CmdDelAllDevicesFromList" Header="_Очистить список устройств" IsEnabled="{Binding ElementName=DevicesList, Path=HasItems}" Style="{StaticResource ChildMenuStyle}" Click="CmdDelAllDevicesFromList_Click"/>                
            </MenuItem>
        </Menu>        
        <Border DockPanel.Dock ="Bottom" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" BorderThickness="1">            
            <StatusBar DockPanel.Dock ="Bottom">
                <StatusBar.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="Lavender" Offset="0"/>
                        <GradientStop Color="White" Offset="1"/>
                    </LinearGradientBrush>
                </StatusBar.Background>
                <StatusBar.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="100" />
                            </Grid.ColumnDefinitions>
                        </Grid>
                    </ItemsPanelTemplate>
                </StatusBar.ItemsPanel>
                <StatusBarItem>
                    <TextBlock x:Name="СonnectionStatus" Text="Отключено"/>
                </StatusBarItem>
                <Separator Grid.Column="1" Margin="1,0,1,0"/>
                <StatusBarItem Grid.Column="2">
                    <TextBlock x:Name="СurrentlyProcessed"/>
                </StatusBarItem>
                <Separator Grid.Column="3" Margin="1,0,1,0"/>
                <StatusBarItem Grid.Column="4">
                    <ProgressBar x:Name="ProcessingProgress" Width="90" Height="16">
                        <ProgressBar.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="Lavender" Offset="0"/>
                                <GradientStop Color="White" Offset="1"/>
                            </LinearGradientBrush>
                        </ProgressBar.Background>
                    </ProgressBar>
                </StatusBarItem>
            </StatusBar>
        </Border>
        <Grid UseLayoutRounding="True" Background="Lavender">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*" MinWidth="250"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="5*" MinWidth="300"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <TextBlock FontSize="12" Text="Устройства" Margin="15,3,3,0" Foreground="DarkMagenta"/>
            <TextBlock Grid.Row="0" Grid.Column="2" FontSize="12" Text="Настройка" Margin="15,3,3,0" Foreground="DarkMagenta"/>
            <ListBox x:Name="DevicesList" Grid.Row="1" Grid.Column="0" Margin="10,10,0,10" HorizontalAlignment="Stretch" 
                     HorizontalContentAlignment="Stretch" Background="Lavender" ItemsSource="{Binding Path=Devices, RelativeSource={RelativeSource FindAncestor,AncestorType=Window}}" SelectionChanged="DevicesList_OnSelectionChanged">
                <ListBox.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="_Удалить устройство из списка" 
                                  IsEnabled="{qc:Binding '$P!=-1', P={Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ContextMenu}},Path=PlacementTarget.SelectedIndex}}"
                                  Style="{StaticResource ChildMenuStyle}" Click="CmdDelDeviceFromList_OnClick"/>
                        <MenuItem Header="_Очистить список устройств" 
                                  IsEnabled="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ContextMenu}},Path=PlacementTarget.HasItems}" 
                                  Style="{StaticResource ChildMenuStyle}" Click="CmdDelAllDevicesFromList_Click"/>
                        <Separator />
                        <MenuItem x:Name ="CmdReadConfiguration" Header="Прочитать конфигурацию устройства" 
                                  IsEnabled="{qc:Binding '$P!=-1', P={Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ContextMenu}},Path=PlacementTarget.SelectedIndex}}" 
                                  Style="{StaticResource ChildMenuStyle}" Click="CmdReadConfiguration_OnClick" />
                        <MenuItem x:Name ="CmdSaveConfiguration" Header="Записать конфигурацию в устройство" 
                                  IsEnabled="{qc:Binding '$P!=-1', P={Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ContextMenu}},Path=PlacementTarget.SelectedIndex}}" 
                                  Style="{StaticResource ChildMenuStyle}" Click="CmdSaveConfiguration_OnClick" />
                        <MenuItem x:Name ="CmdRestart" Header="Выполнить перезагрузку устройства" 
                                  IsEnabled="{qc:Binding '$P!=-1', P={Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ContextMenu}},Path=PlacementTarget.SelectedIndex}}" 
                                  Style="{StaticResource ChildMenuStyle}" Click="CmdRestart_OnClick" />
                    </ContextMenu>
                </ListBox.ContextMenu>
                <ListBox.ItemTemplate>
                    <DataTemplate DataType="mioConfig:Device">
                        <Border Margin="2,2,2,2" BorderThickness="2" CornerRadius="3" BorderBrush="DarkGreen">                            
                            <StackPanel Orientation="Horizontal" Style="{DynamicResource StackPanelLavenderTheme}">
                                <Image Margin="3" Source="Images/rtu.png" 
                                    RenderOptions.BitmapScalingMode="Fant"
                                    Stretch="Fill"
                                    Width="69"
                                    Height="58">
                                    <Image.Effect>
                                        <DropShadowEffect></DropShadowEffect>
                                    </Image.Effect>
                                </Image>
                                <TextBlock Margin="3" TextWrapping="Wrap" Text="{Binding ShortDescription, UpdateSourceTrigger=PropertyChanged}" ToolTipService.ToolTip="{Binding Path=FullDescription, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                        </Border>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <GridSplitter Grid.Row="1" Grid.Column="1"
                Width="3" VerticalAlignment="Stretch" HorizontalAlignment="Center"
                ShowsPreview="False" Background="Lavender"></GridSplitter>
           <Grid Grid.Row="1" Grid.Column="2">
                <TextBlock x:Name ="NoItemsTextBlock" Margin="0,10,10,10" HorizontalAlignment="Center" VerticalAlignment="Center" Text="Нет элементов для отображения"/>
                <TabControl x:Name ="ConfigurationTabs"  Margin="0,10,10,10" Background="Lavender" IsEnabled="{Binding WorkerStopped,RelativeSource={RelativeSource FindAncestor,AncestorType=Window}, UpdateSourceTrigger=PropertyChanged}">                            
                    <TabControl.Resources>                                               
                        <Style TargetType="{x:Type TabItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TabItem}">
                                        <Grid>                                            
                                            <Border 
                                                Name="Border"                                                
                                                Margin="0,0,-4,0"                                                 
                                                BorderThickness="1,1,1,1" 
                                                BorderBrush="CornflowerBlue"
                                                Background="Lavender"
                                                CornerRadius="2,12,0,0" >
                                                <ContentPresenter x:Name="ContentSite"
                                                        VerticalAlignment="Center"
                                                        HorizontalAlignment="Center"
                                                        ContentSource="Header"
                                                        Margin="12,2,12,2"
                                                        RecognizesAccessKey="True"/>
                                            </Border>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Panel.ZIndex" Value="100" />                                                
                                                <Setter TargetName="Border" Property="Background">
                                                    <Setter.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="White" Offset="0"/>
                                                            <GradientStop Color="CornflowerBlue" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>                                                                                                
                                                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                                            </Trigger>
                                            <Trigger Property="IsSelected" Value="False">
                                                <Setter TargetName="Border" Property="Background">
                                                    <Setter.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="White" Offset="0"/>
                                                            <GradientStop Color="Lavender" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>                                                
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TabControl.Resources>
                    <TabItem Header="Коммуникации">
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2*"></ColumnDefinition>
                                <ColumnDefinition Width="5*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <StackPanel Grid.Row ="0" Grid.Column="0">
                                <TextBlock Text="Порты устройства (USART)" Padding="5"></TextBlock>
                                <ListBox x:Name ="UartPots" VerticalAlignment="Top" Background="AliceBlue" Margin="5,5,5,5" 
                                    ItemsSource="{Binding Path=SelectedDevice.UartPortsConfigurations, 
                                    RelativeSource={RelativeSource FindAncestor,AncestorType=Window}}" 
                                    SelectionChanged="UartPots_OnSelectionChanged"
                                    HorizontalContentAlignment="Stretch">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate DataType="mioConfig:DeviceUARTPortConfiguration">
                                            <Border Margin="2" BorderThickness="1" CornerRadius="2" BorderBrush="Black" >
                                                <StackPanel Orientation="Horizontal" Background="AliceBlue">
                                                    <Image Margin="3" Source="Images/port-icon.png">
                                                        <Image.Effect>
                                                            <DropShadowEffect></DropShadowEffect>
                                                        </Image.Effect>
                                                    </Image>
                                                    <TextBlock Margin="3" TextWrapping="Wrap" Text="{Binding ShortDescription}"/>
                                                </StackPanel>
                                            </Border>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </StackPanel>
                            <StackPanel Grid.Row ="0" Grid.Column="1" Grid.IsSharedSizeScope="True">
                                <GroupBox Header="Общие настройки порта" Margin="5" Padding="5" HorizontalContentAlignment="Stretch">
                                    <StackPanel>
                                        <CheckBox Content="Порт активен" Margin="10,10,10,0" 
                                                  IsChecked="{qc:Binding '$P == 1', ConvertBack='$value?1:0',  P={Binding Path=SelectedPortConfiguration.PortOperation, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor,AncestorType=Window}}}"
                                                  Visibility="{qc:Binding '$P==0 ? Visibility.Collapsed : Visibility.Visible', P={Binding ElementName=UartPots, Path=SelectedIndex}}"></CheckBox>
                                        <Grid Margin="10,10,10,0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition SharedSizeGroup="Labels" Width="Auto"></ColumnDefinition>
                                                <ColumnDefinition Width="*"></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <TextBlock Grid.Row ="0" Grid.Column="0" HorizontalAlignment ="Right" Text="Скорость:" Padding="5"></TextBlock>
                                            <ComboBox x:Name="PortBaudRate" Grid.Row ="0" Grid.Column="1" Margin="5,5,5,5" 
                                                      SelectedItem="{Binding Path=SelectedPortConfiguration.PortSpeed, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor,AncestorType=Window}}" 
                                                      ItemsSource="{Binding Path=SelectedPortConfiguration.AvailableComSpeeds, RelativeSource={RelativeSource FindAncestor,AncestorType=Window}}"></ComboBox>
                                            <TextBlock Grid.Row ="1" Grid.Column="0" HorizontalAlignment ="Right" Text="Количество бит в байте:" Padding="5"></TextBlock>
                                            <ComboBox x:Name="PortByteSize" Grid.Row ="1" Grid.Column="1" Margin="5,5,5,5"
                                                      SelectedItem="{Binding Path=SelectedPortConfiguration.PortByteSize, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor,AncestorType=Window}}" 
                                                      ItemsSource="{Binding Path=SelectedPortConfiguration.AvailableComByteSizes, RelativeSource={RelativeSource FindAncestor,AncestorType=Window}}"></ComboBox>
                                            <TextBlock Grid.Row ="2" Grid.Column="0" HorizontalAlignment ="Right" Text="Контроль четности:" Padding="5"></TextBlock>
                                            <ComboBox x:Name="PortParity" Grid.Row ="2" Grid.Column="1" Margin="5,5,5,5"
                                                      SelectedItem="{qc:Binding 'Parity.None+$P', ConvertBack='$value', P={Binding Path=SelectedPortConfiguration.PortParity, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor,AncestorType=Window}}}" 
                                                      ItemsSource="{Binding Path=SelectedPortConfiguration.AvailableComParities, RelativeSource={RelativeSource FindAncestor,AncestorType=Window}}"></ComboBox>
                                            <TextBlock Grid.Row ="3" Grid.Column="0" HorizontalAlignment ="Right" Text="Количество стоповых бит:" Padding="5"></TextBlock>
                                            <ComboBox x:Name="PortStopBits" Grid.Row ="3" Grid.Column="1" Margin="5,5,5,5"
                                                      SelectedItem="{Binding Path=SelectedPortConfiguration.PortStopBits, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor,AncestorType=Window}}" 
                                                      ItemsSource="{Binding Path=SelectedPortConfiguration.AvailableComStopBits, RelativeSource={RelativeSource FindAncestor,AncestorType=Window}}"></ComboBox>
                                        </Grid>
                                    </StackPanel>
                                </GroupBox>
                                <GroupBox Header="Настройки протокола" Margin="5" Padding="5" HorizontalContentAlignment="Stretch">
                                    <StackPanel>
                                        <Grid Margin="10,10,10,0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition SharedSizeGroup="Labels" Width="Auto"></ColumnDefinition>
                                                <ColumnDefinition Width="*"></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"></RowDefinition>                                                
                                            </Grid.RowDefinitions>
                                            <TextBlock Grid.Row ="0" Grid.Column="0" HorizontalAlignment ="Right" Text="Протокол обмена:" Padding="5"></TextBlock>
                                            <ComboBox x:Name="PortProtocolType" Grid.Row ="0" Grid.Column="1" Margin="5,5,5,5" 
                                                      SelectedIndex="{Binding Path=SelectedPortConfiguration.PortProtocolType, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor,AncestorType=Window}}">
                                                <ComboBoxItem Visibility="{qc:MultiBinding 
                                                    '($P0==0)||(!$P1) ? Visibility.Collapsed : Visibility.Visible', 
                                                    P0={Binding ElementName=UartPots, Path=SelectedIndex},
                                                    P1={Binding RelativeSource={RelativeSource FindAncestor,AncestorType=Window}, Path=SelectedDevice.ModuleModbusMasterPresent}}">
                                                    Modbus (master)</ComboBoxItem>
                                                <ComboBoxItem>Modbus (slave)</ComboBoxItem>
                                            </ComboBox>                                                                                       
                                        </Grid>
                                        <Grid Margin="10,10,10,0" Visibility="{qc:Binding '$P==0 ? Visibility.Visible : Visibility.Collapsed', P={Binding ElementName=PortProtocolType,Path=SelectedIndex}}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition SharedSizeGroup="Labels" Width="Auto"></ColumnDefinition>
                                                <ColumnDefinition Width="*"></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                            </Grid.RowDefinitions>                                           
                                            <TextBlock Grid.Row ="0" Grid.Column="0" HorizontalAlignment ="Right" Text="Таймаут ответа:" Padding="5"></TextBlock>
                                            <TextBox x:Name="PortMasterTimeout" Grid.Row ="0" Grid.Column="1" Margin="5,5,5,5"
                                                        wpf:TextBoxMaskBehavior.Mask="Integer"
        		                                        wpf:TextBoxMaskBehavior.MinimumValue="0"
        		                                        wpf:TextBoxMaskBehavior.MaximumValue="65535"
                                                        Text="{Binding Path=SelectedPortConfiguration.PortMasterTimeout, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor,AncestorType=Window}}"></TextBox>
                                            <TextBlock Grid.Row ="1" Grid.Column="0" HorizontalAlignment ="Right" Text="Количество повторов запроса:" Padding="5"></TextBlock>
                                            <TextBox x:Name="PortRetries" Grid.Row ="1" Grid.Column="1" Margin="5,5,5,5"
                                                        wpf:TextBoxMaskBehavior.Mask="Integer"
        		                                        wpf:TextBoxMaskBehavior.MinimumValue="0"
        		                                        wpf:TextBoxMaskBehavior.MaximumValue="255"
                                                        Text="{Binding Path=SelectedPortConfiguration.PortRetriesCount, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor,AncestorType=Window}}"></TextBox>                                         
                                        </Grid>
                                        <Grid Margin="10,10,10,0" Visibility="{qc:Binding '$P==1 ? Visibility.Visible : Visibility.Collapsed', P={Binding ElementName=PortProtocolType,Path=SelectedIndex}}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition SharedSizeGroup="Labels" Width="Auto"></ColumnDefinition>
                                                <ColumnDefinition Width="*"></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"></RowDefinition>                                                
                                            </Grid.RowDefinitions>
                                            <TextBlock Grid.Row ="0" Grid.Column="0" HorizontalAlignment ="Right" Text="Адрес slave:" Padding="5"></TextBlock>
                                            <TextBox x:Name="PortModbusAddress" Grid.Row ="0" Grid.Column="1" Margin="5,5,5,5"                                                         
                                                    wpf:TextBoxMaskBehavior.Mask="Integer"
        		                                    wpf:TextBoxMaskBehavior.MinimumValue="1"
        		                                    wpf:TextBoxMaskBehavior.MaximumValue="247" TextChanged="PortModbusAddress_OnTextChanged"
                                                    Text="{Binding Path=SelectedPortConfiguration.PortModbusAddress, RelativeSource={RelativeSource FindAncestor,AncestorType=Window}}">
                                            </TextBox>
                                        </Grid>
                                    </StackPanel>
                                </GroupBox>
                            </StackPanel>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Модуль ТС" Visibility="{qc:Binding '!$P ? Visibility.Collapsed : Visibility.Visible',                                                     
                                                P={Binding RelativeSource={RelativeSource FindAncestor,AncestorType=Window}, Path=SelectedDevice.ModuleDIPresent}}"></TabItem>
                    <TabItem Header="Модуль ТУ" Visibility="{qc:Binding '!$P ? Visibility.Collapsed : Visibility.Visible',                                                     
                                                P={Binding RelativeSource={RelativeSource FindAncestor,AncestorType=Window}, Path=SelectedDevice.ModuleDOPresent}}"></TabItem>
                    <TabItem Header="Ретранслятор" Visibility="{qc:Binding '!$P ? Visibility.Collapsed : Visibility.Visible',                                                     
                                                P={Binding RelativeSource={RelativeSource FindAncestor,AncestorType=Window}, Path=SelectedDevice.ModuleRouterPresent}}"></TabItem>
                    <TabItem Header="Модуль Modbus (master)" Visibility="{qc:Binding '!$P ? Visibility.Collapsed : Visibility.Visible',                                                     
                                                P={Binding RelativeSource={RelativeSource FindAncestor,AncestorType=Window}, Path=SelectedDevice.ModuleModbusMasterPresent}}"></TabItem>                    
                </TabControl>
            </Grid>            
        </Grid>
    </DockPanel>
</Window>
