<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <LinearGradientBrush x:Key="GradientThemeBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="White" Offset="0" />
        <GradientStop Color="Lavender" Offset="0.1"/>
        <GradientStop Color="Lavender" Offset="0.9"/>
        <GradientStop Color="White" Offset="1" />
    </LinearGradientBrush>
    <Style x:Key="ButtonGradientStyle"  TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource GradientThemeBrush}"/>       
    </Style>
    <Style x:Key="ListItemGradientStyle"  TargetType="{x:Type StackPanel}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="LightGreen" Offset="0"></GradientStop>
                    <GradientStop Color="White" Offset="1"></GradientStop>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="Lavender"/>
    </Style>
    
    <Style x:Key="StackPanelLavenderTheme" TargetType="{x:Type StackPanel}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="LightGreen" Offset="0"></GradientStop>
                    <GradientStop Color="White" Offset="1"></GradientStop>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter> <!--Value="{StaticResource GradientThemeBrush}"/>-->
    </Style>
    
    <Style TargetType="{x:Type ListBoxItem}">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="DarkBlue"/>
                <Setter Property="FontWeight" Value="Bold"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CenteredHeader" TargetType="DataGridColumnHeader">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
    </Style>

    <Style x:Key="EmptyButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#00000000"/>
        <Setter Property="BorderBrush" Value="#00000000"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter 
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                        Margin="{TemplateBinding Padding}" 
                        RecognizesAccessKey="True" 
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>            
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Margin" Value="3,3,7,7"/>                
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Margin" Value="5"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ButtonImageHoverStyle" TargetType="Image">        
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="LimeGreen" BlurRadius="15"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="Black"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>            
    </Style>
</ResourceDictionary>